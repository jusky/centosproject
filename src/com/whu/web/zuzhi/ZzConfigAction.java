/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.whu.web.zuzhi;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.whu.tools.DBTools;
import com.whu.web.user.ConfigUserForm;
import com.whu.web.user.UserBean;

/** 
 * MyEclipse Struts
 * Creation date: 01-13-2014
 * 
 * XDoclet definition:
 * @struts.action path="/zzConfigAction" name="zzConfigForm" parameter="method" scope="request" validate="true"
 */
public class ZzConfigAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws IOException 
	 */
	public ActionForward save(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		response.setContentType("text/html;charset=utf-8");
		request.setCharacterEncoding("utf-8");
		ZzConfigForm zzConfigForm = (ZzConfigForm) form;
		String operation = request.getParameter("operation");
		String zzName = zzConfigForm.getZzName();
		String zzDescribe = zzConfigForm.getZzDescribe();
		String pzzID = zzConfigForm.getPzzID();
		int zzSort = 2;
		String sql = "";
		String zzID = "";
		DBTools dbTool = new DBTools();	
		boolean result = false;
		
		sql = "select ZZID from SYS_ZZINFO where PZZID='" + pzzID + "' order by ZZID desc limit 1";
		String maxZzID = dbTool.queryZZID(sql);

		if(!maxZzID.equals(""))
		{
			int mzzID = Integer.valueOf(maxZzID);
			mzzID++;
			if(operation.equals("new"))
			{
				zzID = String.valueOf(mzzID);
				sql = "insert into SYS_ZZINFO(ZZID,ZZNAME,ZZDESCRIBE,ZZSORT,ISJC,PZZID) values('" + zzID + "','" + zzName + "','" + zzDescribe +"', " + zzSort + ", '0','" + pzzID + "')";
			}
			else if(operation.equals("edit"))
			{
				zzID = zzConfigForm.getZzID();
				sql = "update SYS_ZZINFO set ZZID='" + String.valueOf(mzzID) + "', ZZNAME='" + zzName + "',ZZDESCRIBE='" + zzDescribe + "', PZZID='" + pzzID + "' where ZZID='" + zzID + "'";
			}
			result = dbTool.insertItem(sql);
		}
		PrintWriter out = response.getWriter();
		JSONObject json = new JSONObject();
		if(result)
		{
			request.getSession().setAttribute("configFlag", "true");
			json.put("statusCode", 200);
			json.put("message", "保存成功！");
			json.put("callbackType", "closeCurrent");
		}
		else
		{
			json.put("statusCode", 300);
			json.put("message", "保存失败！");
		}
		out.write(json.toString());
		out.flush();
		return null;
	}
	public ActionForward edit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		response.setContentType("text/html;charset=utf-8");
		request.setCharacterEncoding("utf-8");	
		
		ZzConfigForm zzConfigForm = (ZzConfigForm) form;
		String id = request.getParameter("id");
		DBTools dbTools = new DBTools();
		String sql = "select a.*,b.ZZNAME as PZZNAME from SYS_ZZINFO a, SYS_ZZINFO b where a.PZZID=b.ZZID and a.ID=" + id;
		ZZBean zzBean = dbTools.queryZZBean(sql);
		ArrayList result = new ArrayList();
		if(zzBean!=null)
		{
			result.add(zzBean);
			zzConfigForm.setRecordNotFind("false");
			zzConfigForm.setRecordList(result);
			return mapping.findForward("edit");
		}
		else
		{
			zzConfigForm.setRecordNotFind("true");
			return mapping.findForward("initError");
		}
	}
}