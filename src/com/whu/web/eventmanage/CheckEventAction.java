/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.whu.web.eventmanage;

import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.whu.tools.DBTools;
import com.whu.tools.SystemConstant;
import com.whu.web.common.SystemShare;
import com.whu.web.event.EventBean;

/** 
 * MyEclipse Struts
 * Creation date: 09-03-2013
 * 
 * XDoclet definition:
 * @struts.action path="/checkEventAction" name="checkEventForm" parameter="method" scope="request" validate="true"
 */
public class CheckEventAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	/**
	 * 上报初步核实信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws IOException 
	 */
	public ActionForward report(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		response.setContentType("text/html;charset=utf-8");
		request.setCharacterEncoding("utf-8");
		CheckEventForm checkEventForm = (CheckEventForm) form;
		String reportID = request.getParameter("reportID");
		
		String faculty = checkEventForm.getFaculty();
		String preAdvice = checkEventForm.getPreAdvice();
		//报送领导，多个时用“,”分开
		String bsHead = request.getParameter("org3.userName");
		//String bsHead = request.getParameter("org3.loginName");
		
		String checkName = checkEventForm.getCheckName();
		String userName = (String)request.getSession().getAttribute("UserName");

		String[] arrHead = bsHead.split(",");
		//工作提醒类型
		String msgType = SystemConstant.MSG_GZTX;
		String sendTime = SystemShare.GetNowTime("yyyy-MM-dd HH:mm:ss");
		String checkTime = SystemShare.GetNowTime("yyyy-MM-dd");
		String isHandle = "0";
		String isNotify = "0";
		
		DBTools db = new DBTools();
		boolean result = false;
	
		String sql = "insert into TB_CHECKINFO(REPORTID,PREADVICE,BSHEAD,CHECKNAME,CHECKTIME) values('" + reportID + "','" + preAdvice + "','" + bsHead + "', '" + checkName + "','" + checkTime + "')";
		result = db.insertItem(sql);
		
		if(result)
		{
			//将事件状态修改为“已初步核实”
			sql = "update TB_REPORTINFO set STATUS='" + SystemConstant.SS_CHECKEVENT + "',LASTTIME='" + checkTime + "',FACULTY='" + faculty + "' where REPORTID='"+ reportID + "'";
			result = db.insertItem(sql);
			//插入到消息提醒数据库表中
			try
			{
				result = db.saveMsgNotify(userName, arrHead, reportID, sendTime, msgType, isHandle, isNotify);
				//插入处理过程到数据库中
				String describe = checkTime + "," + checkName + "提交初步核实意见,核实意见详情请查看《审核信息》一栏";
				db.InsertHandleProcess(reportID, checkName, SystemConstant.HP_CHECKEVENT, SystemConstant.SS_CHECKEVENT,SystemConstant.LCT_DCHS, describe);
				//插入反馈信息到门户网站数据库中，便于实名举报用户利用查询码查询反馈信息
				db.InsertFKInfo(reportID, SystemConstant.FK_CHECKEVENT, checkTime);
				//写入日志文件
				db.insertLogInfo(userName, SystemConstant.LOG_CHECK, "录入初步核实信息，事件编号为：" + reportID, request.getRemoteAddr());
			}
			catch (Exception e) {
				e.printStackTrace();
			}
		}
		PrintWriter out = response.getWriter();
		JSONObject json = new JSONObject();
		if(result)
		{
			json.put("statusCode", 200);
			json.put("message", "初核信息上报成功");
			json.put("callbackType", "closeCurrent");
		}
		else
		{
			json.put("statusCode", 300);
			json.put("message", "初核信息上报失败");
		}
		out.write(json.toString());
		out.flush();
		out.close();
		return null;
	}
}